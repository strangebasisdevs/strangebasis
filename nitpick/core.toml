[nitpick.meta]
name = "core"
url = "https://github.com/strangebasisdevs/strangebasis/blob/main/nitpick/core.toml"


# The following section is the GitHub Actions workflow for Python CI.

[".github/workflows/ci.yaml"]
name = "Python CI"

[".github/workflows/ci.yaml".on.pull_request]
branches = ["*"]

[".github/workflows/ci.yaml".on.push]
branches = ["main"]

[".github/workflows/ci.yaml".jobs.build.strategy]
fail-fast = false

[".github/workflows/ci.yaml".jobs.build.strategy.matrix]
os = ["ubuntu-latest", "windows-latest", "macos-latest"]
python-version = ["3.12",]

[".github/workflows/ci.yaml".jobs.build]
name = "${{ matrix.python-version }} ${{ matrix.os }}"
runs-on = "${{ matrix.os }}"

[".github/workflows/ci.yaml".jobs.build.env]
PYTHONUNBUFFERED = 1

[[".github/workflows/ci.yaml".jobs.build.steps]]
name = "Checkout"
uses = "actions/checkout@v3"

[[".github/workflows/ci.yaml".jobs.build.steps]]
name = "Set up Python ${{ matrix.python-version }}"
uses = "actions/setup-python@v4"

[".github/workflows/ci.yaml".jobs.build.steps.with]
python-version = "${{ matrix.python-version }}"

[[".github/workflows/ci.yaml".jobs.build.steps]]
name = "Install poetry"
run = "python -m pip install poetry"

[[".github/workflows/ci.yaml".jobs.build.steps]]
name = "Install dependencies"
run = "poetry install"

[[".github/workflows/ci.yaml".jobs.build.steps]]
name = "Run tests"
run = "poetry run pytest --cov-report=xml"

[[".github/workflows/ci.yaml".jobs.build.steps]]
name = "Download CodeClimate Test Reporter"
if = "matrix.os == 'ubuntu-latest'"

[[".github/workflows/ci.yaml".jobs.build.steps]]
name = "Report coverage to CodeClimate"
if = "matrix.os == 'ubuntu-latest'"
env.CC_TEST_REPORTER_ID = "${{ secrets.CC_TEST_REPORTER_ID }}"


# The following section is the nitpick configuration for the project.

["pyproject.toml".tool.nitpick]
