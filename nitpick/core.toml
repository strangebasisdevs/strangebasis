[nitpick.meta]
name = "core"
url = "https://github.com/strangebasisdevs/strangebasis/blob/main/nitpick/core.toml"


# strangebasisdevs core GitHub Actions

[".github/workflows/ci.yaml"]
name = "Python CI"

[".github/workflows/ci.yaml".on.pull_request]
branches = ["*"]

[".github/workflows/ci.yaml".on.push]
branches = ["main"]

[".github/workflows/ci.yaml".jobs.build.strategy]
fail-fast = false

[".github/workflows/ci.yaml".jobs.build.strategy.matrix]
os = ["ubuntu-latest", "windows-latest", "macos-latest"]
python-version = ["3.12",]

[".github/workflows/ci.yaml".jobs.build]
name = "${{ matrix.python-version }} ${{ matrix.os }}"
runs-on = "${{ matrix.os }}"

[".github/workflows/ci.yaml".jobs.build.env]
PYTHONUNBUFFERED = 1

[[".github/workflows/ci.yaml".jobs.build.steps]]
name = "Checkout"
uses = "actions/checkout@v3"

[[".github/workflows/ci.yaml".jobs.build.steps]]
name = "Set up Python ${{ matrix.python-version }}"
uses = "actions/setup-python@v4"

[".github/workflows/ci.yaml".jobs.build.steps.with]
python-version = "${{ matrix.python-version }}"

[[".github/workflows/ci.yaml".jobs.build.steps]]
name = "Install poetry"
run = "python -m pip install poetry"

[[".github/workflows/ci.yaml".jobs.build.steps]]
name = "Install dependencies"
run = "poetry install"

[[".github/workflows/ci.yaml".jobs.build.steps]]
name = "Run tests"
run = "poetry run pytest --cov-report=xml"

[[".github/workflows/ci.yaml".jobs.build.steps]]
name = "Download CodeClimate Test Reporter"
if = "matrix.os == 'ubuntu-latest'"

[[".github/workflows/ci.yaml".jobs.build.steps]]
name = "Report coverage to CodeClimate"
if = "matrix.os == 'ubuntu-latest'"
env.CC_TEST_REPORTER_ID = "${{ secrets.CC_TEST_REPORTER_ID }}"


# strangebasisdevs core CodeClimate config

# https://docs.codeclimate.com/docs/maintainability#section-checks
# https://docs.codeclimate.com/docs/advanced-configuration#default-checks
[".codeclimate.yml"]
version = "2"

[".codeclimate.yml".checks.file-lines.config]
# Pylint's default is also 1000:
# https://pylint.readthedocs.io/en/latest/user_guide/configuration/all-options.html#max-module-lines
threshold = 1000

[".codeclimate.yml".checks.method-complexity.config]
threshold = 10 # Same as [flake8]max-complexity

[".codeclimate.yml".plugins.fixme] # https://docs.codeclimate.com/docs/fixme
# https://github.com/codeclimate/codeclimate-fixme
enabled = true

# strangebasisdevs core Commitizen config

[[".pre-commit-config.yaml".repos]]
repo = "https://github.com/commitizen-tools/commitizen"

[[".pre-commit-config.yaml".repos.hooks]]
id = "commitizen"
stages = ["commit-msg"]

["pyproject.toml".tool.commitizen]
name = "cz_conventional_commits"
tag_format = "v$version"
changelog_file = "CHANGELOG.md"
changelog_incremental = true
update_changelog_on_bump = false

# strangebasisdevs core EditorConfig config

[".editorconfig"]
# top-most EditorConfig file
root = true

[".editorconfig"."*"]
# Unix-style newlines with a newline ending every file
charset = "utf-8"
end_of_line = "lf"
indent_size = 4
indent_style = "space"
insert_final_newline = true
trim_trailing_whitespace = true

[".editorconfig"."*.{bat,cmd,ps1}"]
end_of_line = "crlf"

[".editorconfig"."*.{js,json,json5,yml,yaml,md,rb}"]
indent_size = 2

[".editorconfig".Makefile]
indent_style = "tab"

[".editorconfig"."*.md"]
indent_style = "space"
indent_size = 1
insert_final_newline = true
trim_trailing_whitespace = true

[".editorconfig".LICENSE]
indent_size = "unset"

[".codeclimate.yml".plugins.editorconfig]  # https://docs.codeclimate.com/docs/editorconfig
enabled = true

# strangebasisdevs core
