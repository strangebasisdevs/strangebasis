name: Python CI
on:
  pull_request:
    branches:
      - "*"
  push:
    branches:
      - main
jobs:
  build:
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - windows-latest
          - macos-latest
        python-version:
          - "3.12"
    name: ${{ matrix.python-version }} ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    env:
      PYTHONUNBUFFERED: 1
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install poetry
        run: python -m pip install poetry
      - name: Install dependencies
        run: poetry install
      - name: Run tests
        run: poetry run pytest --cov-report=xml

      - name: Download CodeClimate Test Reporter
        if: matrix.os == 'ubuntu-latest'
        run: |
          curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
          chmod +x ./cc-test-reporter

      - name: Report coverage to CodeClimate
        if: matrix.os == 'ubuntu-latest'
        env:
          CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
        run: |
          ./cc-test-reporter before-build
          ./cc-test-reporter format-coverage coverage.xml --input-type coverage.py
          ./cc-test-reporter upload-coverage
